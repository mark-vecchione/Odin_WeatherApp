/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/weather.js":
/*!************************!*\
  !*** ./src/weather.js ***!
  \************************/
/***/ (() => {

eval("// API Key//\nconst API_KEY = 'HE9MELQJLQJP4P8366SN994DB';\n\n//DOM elements//\nlet locationInput;\nlet getWeatherButton;\nlet weatherResults;\n\n//Initialize the app// \ndocument.addEventListener('DOMContentLoaded', () => {\n    //get DOM elements//\n    locationInput = document.getElementById('location-input');\n    getWeatherButton = document.getElementById('get-weather');\n    weatherResults = document.getElementById('weather-results');\n\n\n    //event listener for get weather button//\n    getWeatherButton.addEventListener('click', () => {\n        handleWeatherRequest();\n\n    })\n\n    //event listener for input//\n    locationInput.addEventListener('keypress', (event) => {\n        if (event.key === 'Enter') {\n            handleWeatherRequest();\n        }\n    });\n});\n\n\n//handle weather request//\nfunction handleWeatherRequest() {\n    const location = locationInput.value.trim();\n    if (location) {\n        getWeatherData(location);\n    } else {\n        showError(\"Please enter a location\");\n    }\n}\n\n//function to fetch weather data \n\nasync function getWeatherData(location) {\n    //show loading message//\n    weatherResults.innerHTML = '<div class=\"loading\">Loading weather data...</div>';\n\n    try {\n        //create API URL//\n        const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(location)}?unitGroup=us&key=${API_KEY}&include=current`;\n        \n        //fetch data from API//\n        const response = await fetch(apiUrl);\n\n        //check response successful or not//\n\n        if(!response.ok) {\n            throw new Error(`API returned status code ${response.status}`);\n        }\n\n        //parse JSON//\n        const data = await response.json();\n\n        //display weather data//\n        displayWeatherData(data);\n    } catch(error) {\n        console.error('Error fetching weather data:', error);\n        showError('Failed to fetch weather data. Please check the location and try again.');\n    }\n}\n\nfunction displayWeatherData(data) {\n    const location = data.resolvedAddress;\n    const current = data.currentConditions;\n    const temperature = current.temp;\n    const feelsLike = current.feelslike;\n    const datetime = new Date(current.datetimeEpoch * 1000).toLocaleString();\n\n    //create HTML for weather card//\n    const weatherHTML = `\n        <div class=\"weather-card\">\n            <h2>${location}</h2>\n            <p><strong>Date & Time:</strong> ${datetime}</p>\n            <p><strong>Temperature:</strong> ${temperature}°F</p>\n            <p><strong>Feels Like:</strong> ${feelsLike}°F</p>\n        </div>\n    `;\n\n    //update results container with weather//\n    weatherResults.innerHTML = weatherHTML;\n}\n\nfunction showError(message) {\n    weatherResults.innerHTML = `<div class=\"error\">${message}</div>`;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd2VhdGhlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDOzs7QUFHRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhHQUE4Ryw2QkFBNkIsb0JBQW9CLFFBQVE7QUFDdks7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0Esd0RBQXdELGdCQUFnQjtBQUN4RTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixTQUFTO0FBQzNCLCtDQUErQyxTQUFTO0FBQ3hELCtDQUErQyxZQUFZO0FBQzNELDhDQUE4QyxVQUFVO0FBQ3hEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EscURBQXFELFFBQVE7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd2VhdGhlci5qcz84ZWIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFQSSBLZXkvL1xuY29uc3QgQVBJX0tFWSA9ICdIRTlNRUxRSkxRSlA0UDgzNjZTTjk5NERCJztcblxuLy9ET00gZWxlbWVudHMvL1xubGV0IGxvY2F0aW9uSW5wdXQ7XG5sZXQgZ2V0V2VhdGhlckJ1dHRvbjtcbmxldCB3ZWF0aGVyUmVzdWx0cztcblxuLy9Jbml0aWFsaXplIHRoZSBhcHAvLyBcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gICAgLy9nZXQgRE9NIGVsZW1lbnRzLy9cbiAgICBsb2NhdGlvbklucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvY2F0aW9uLWlucHV0Jyk7XG4gICAgZ2V0V2VhdGhlckJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnZXQtd2VhdGhlcicpO1xuICAgIHdlYXRoZXJSZXN1bHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dlYXRoZXItcmVzdWx0cycpO1xuXG5cbiAgICAvL2V2ZW50IGxpc3RlbmVyIGZvciBnZXQgd2VhdGhlciBidXR0b24vL1xuICAgIGdldFdlYXRoZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGhhbmRsZVdlYXRoZXJSZXF1ZXN0KCk7XG5cbiAgICB9KVxuXG4gICAgLy9ldmVudCBsaXN0ZW5lciBmb3IgaW5wdXQvL1xuICAgIGxvY2F0aW9uSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgICAgICAgaGFuZGxlV2VhdGhlclJlcXVlc3QoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG5cblxuLy9oYW5kbGUgd2VhdGhlciByZXF1ZXN0Ly9cbmZ1bmN0aW9uIGhhbmRsZVdlYXRoZXJSZXF1ZXN0KCkge1xuICAgIGNvbnN0IGxvY2F0aW9uID0gbG9jYXRpb25JbnB1dC52YWx1ZS50cmltKCk7XG4gICAgaWYgKGxvY2F0aW9uKSB7XG4gICAgICAgIGdldFdlYXRoZXJEYXRhKGxvY2F0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzaG93RXJyb3IoXCJQbGVhc2UgZW50ZXIgYSBsb2NhdGlvblwiKTtcbiAgICB9XG59XG5cbi8vZnVuY3Rpb24gdG8gZmV0Y2ggd2VhdGhlciBkYXRhIFxuXG5hc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyRGF0YShsb2NhdGlvbikge1xuICAgIC8vc2hvdyBsb2FkaW5nIG1lc3NhZ2UvL1xuICAgIHdlYXRoZXJSZXN1bHRzLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPVwibG9hZGluZ1wiPkxvYWRpbmcgd2VhdGhlciBkYXRhLi4uPC9kaXY+JztcblxuICAgIHRyeSB7XG4gICAgICAgIC8vY3JlYXRlIEFQSSBVUkwvL1xuICAgICAgICBjb25zdCBhcGlVcmwgPSBgaHR0cHM6Ly93ZWF0aGVyLnZpc3VhbGNyb3NzaW5nLmNvbS9WaXN1YWxDcm9zc2luZ1dlYlNlcnZpY2VzL3Jlc3Qvc2VydmljZXMvdGltZWxpbmUvJHtlbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24pfT91bml0R3JvdXA9dXMma2V5PSR7QVBJX0tFWX0maW5jbHVkZT1jdXJyZW50YDtcbiAgICAgICAgXG4gICAgICAgIC8vZmV0Y2ggZGF0YSBmcm9tIEFQSS8vXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsKTtcblxuICAgICAgICAvL2NoZWNrIHJlc3BvbnNlIHN1Y2Nlc3NmdWwgb3Igbm90Ly9cblxuICAgICAgICBpZighcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQVBJIHJldHVybmVkIHN0YXR1cyBjb2RlICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9wYXJzZSBKU09OLy9cbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICAvL2Rpc3BsYXkgd2VhdGhlciBkYXRhLy9cbiAgICAgICAgZGlzcGxheVdlYXRoZXJEYXRhKGRhdGEpO1xuICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgd2VhdGhlciBkYXRhOicsIGVycm9yKTtcbiAgICAgICAgc2hvd0Vycm9yKCdGYWlsZWQgdG8gZmV0Y2ggd2VhdGhlciBkYXRhLiBQbGVhc2UgY2hlY2sgdGhlIGxvY2F0aW9uIGFuZCB0cnkgYWdhaW4uJyk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkaXNwbGF5V2VhdGhlckRhdGEoZGF0YSkge1xuICAgIGNvbnN0IGxvY2F0aW9uID0gZGF0YS5yZXNvbHZlZEFkZHJlc3M7XG4gICAgY29uc3QgY3VycmVudCA9IGRhdGEuY3VycmVudENvbmRpdGlvbnM7XG4gICAgY29uc3QgdGVtcGVyYXR1cmUgPSBjdXJyZW50LnRlbXA7XG4gICAgY29uc3QgZmVlbHNMaWtlID0gY3VycmVudC5mZWVsc2xpa2U7XG4gICAgY29uc3QgZGF0ZXRpbWUgPSBuZXcgRGF0ZShjdXJyZW50LmRhdGV0aW1lRXBvY2ggKiAxMDAwKS50b0xvY2FsZVN0cmluZygpO1xuXG4gICAgLy9jcmVhdGUgSFRNTCBmb3Igd2VhdGhlciBjYXJkLy9cbiAgICBjb25zdCB3ZWF0aGVySFRNTCA9IGBcbiAgICAgICAgPGRpdiBjbGFzcz1cIndlYXRoZXItY2FyZFwiPlxuICAgICAgICAgICAgPGgyPiR7bG9jYXRpb259PC9oMj5cbiAgICAgICAgICAgIDxwPjxzdHJvbmc+RGF0ZSAmIFRpbWU6PC9zdHJvbmc+ICR7ZGF0ZXRpbWV9PC9wPlxuICAgICAgICAgICAgPHA+PHN0cm9uZz5UZW1wZXJhdHVyZTo8L3N0cm9uZz4gJHt0ZW1wZXJhdHVyZX3CsEY8L3A+XG4gICAgICAgICAgICA8cD48c3Ryb25nPkZlZWxzIExpa2U6PC9zdHJvbmc+ICR7ZmVlbHNMaWtlfcKwRjwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgYDtcblxuICAgIC8vdXBkYXRlIHJlc3VsdHMgY29udGFpbmVyIHdpdGggd2VhdGhlci8vXG4gICAgd2VhdGhlclJlc3VsdHMuaW5uZXJIVE1MID0gd2VhdGhlckhUTUw7XG59XG5cbmZ1bmN0aW9uIHNob3dFcnJvcihtZXNzYWdlKSB7XG4gICAgd2VhdGhlclJlc3VsdHMuaW5uZXJIVE1MID0gYDxkaXYgY2xhc3M9XCJlcnJvclwiPiR7bWVzc2FnZX08L2Rpdj5gO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/weather.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/weather.js"]();
/******/ 	
/******/ })()
;